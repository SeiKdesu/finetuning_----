Device: mps
==========================================================================================
Layer (type:depth-idx)                   Output Shape              Param #
==========================================================================================
ResNet                                   [1, 7]                    --
├─Conv2d: 1-1                            [1, 64, 112, 112]         9,408
├─BatchNorm2d: 1-2                       [1, 64, 112, 112]         128
├─ReLU: 1-3                              [1, 64, 112, 112]         --
├─MaxPool2d: 1-4                         [1, 64, 56, 56]           --
├─Sequential: 1-5                        [1, 64, 56, 56]           --
│    └─BasicBlock: 2-1                   [1, 64, 56, 56]           --
│    │    └─Conv2d: 3-1                  [1, 64, 56, 56]           36,864
│    │    └─BatchNorm2d: 3-2             [1, 64, 56, 56]           128
│    │    └─ReLU: 3-3                    [1, 64, 56, 56]           --
│    │    └─Conv2d: 3-4                  [1, 64, 56, 56]           36,864
│    │    └─BatchNorm2d: 3-5             [1, 64, 56, 56]           128
│    │    └─ReLU: 3-6                    [1, 64, 56, 56]           --
│    └─BasicBlock: 2-2                   [1, 64, 56, 56]           --
│    │    └─Conv2d: 3-7                  [1, 64, 56, 56]           36,864
│    │    └─BatchNorm2d: 3-8             [1, 64, 56, 56]           128
│    │    └─ReLU: 3-9                    [1, 64, 56, 56]           --
│    │    └─Conv2d: 3-10                 [1, 64, 56, 56]           36,864
│    │    └─BatchNorm2d: 3-11            [1, 64, 56, 56]           128
│    │    └─ReLU: 3-12                   [1, 64, 56, 56]           --
├─Sequential: 1-6                        [1, 128, 28, 28]          --
│    └─BasicBlock: 2-3                   [1, 128, 28, 28]          --
│    │    └─Conv2d: 3-13                 [1, 128, 28, 28]          73,728
│    │    └─BatchNorm2d: 3-14            [1, 128, 28, 28]          256
│    │    └─ReLU: 3-15                   [1, 128, 28, 28]          --
│    │    └─Conv2d: 3-16                 [1, 128, 28, 28]          147,456
│    │    └─BatchNorm2d: 3-17            [1, 128, 28, 28]          256
│    │    └─Sequential: 3-18             [1, 128, 28, 28]          8,448
│    │    └─ReLU: 3-19                   [1, 128, 28, 28]          --
│    └─BasicBlock: 2-4                   [1, 128, 28, 28]          --
│    │    └─Conv2d: 3-20                 [1, 128, 28, 28]          147,456
│    │    └─BatchNorm2d: 3-21            [1, 128, 28, 28]          256
│    │    └─ReLU: 3-22                   [1, 128, 28, 28]          --
│    │    └─Conv2d: 3-23                 [1, 128, 28, 28]          147,456
│    │    └─BatchNorm2d: 3-24            [1, 128, 28, 28]          256
│    │    └─ReLU: 3-25                   [1, 128, 28, 28]          --
├─Sequential: 1-7                        [1, 256, 14, 14]          --
│    └─BasicBlock: 2-5                   [1, 256, 14, 14]          --
│    │    └─Conv2d: 3-26                 [1, 256, 14, 14]          294,912
│    │    └─BatchNorm2d: 3-27            [1, 256, 14, 14]          512
│    │    └─ReLU: 3-28                   [1, 256, 14, 14]          --
│    │    └─Conv2d: 3-29                 [1, 256, 14, 14]          589,824
│    │    └─BatchNorm2d: 3-30            [1, 256, 14, 14]          512
│    │    └─Sequential: 3-31             [1, 256, 14, 14]          33,280
│    │    └─ReLU: 3-32                   [1, 256, 14, 14]          --
│    └─BasicBlock: 2-6                   [1, 256, 14, 14]          --
│    │    └─Conv2d: 3-33                 [1, 256, 14, 14]          589,824
│    │    └─BatchNorm2d: 3-34            [1, 256, 14, 14]          512
│    │    └─ReLU: 3-35                   [1, 256, 14, 14]          --
│    │    └─Conv2d: 3-36                 [1, 256, 14, 14]          589,824
│    │    └─BatchNorm2d: 3-37            [1, 256, 14, 14]          512
│    │    └─ReLU: 3-38                   [1, 256, 14, 14]          --
├─Sequential: 1-8                        [1, 512, 7, 7]            --
│    └─BasicBlock: 2-7                   [1, 512, 7, 7]            --
│    │    └─Conv2d: 3-39                 [1, 512, 7, 7]            1,179,648
│    │    └─BatchNorm2d: 3-40            [1, 512, 7, 7]            1,024
│    │    └─ReLU: 3-41                   [1, 512, 7, 7]            --
│    │    └─Conv2d: 3-42                 [1, 512, 7, 7]            2,359,296
│    │    └─BatchNorm2d: 3-43            [1, 512, 7, 7]            1,024
│    │    └─Sequential: 3-44             [1, 512, 7, 7]            132,096
│    │    └─ReLU: 3-45                   [1, 512, 7, 7]            --
│    └─BasicBlock: 2-8                   [1, 512, 7, 7]            --
│    │    └─Conv2d: 3-46                 [1, 512, 7, 7]            2,359,296
│    │    └─BatchNorm2d: 3-47            [1, 512, 7, 7]            1,024
│    │    └─ReLU: 3-48                   [1, 512, 7, 7]            --
│    │    └─Conv2d: 3-49                 [1, 512, 7, 7]            2,359,296
│    │    └─BatchNorm2d: 3-50            [1, 512, 7, 7]            1,024
│    │    └─ReLU: 3-51                   [1, 512, 7, 7]            --
├─AdaptiveAvgPool2d: 1-9                 [1, 512, 1, 1]            --
├─Linear: 1-10                           [1, 7]                    3,591
==========================================================================================
Total params: 11,180,103
Trainable params: 11,180,103
Non-trainable params: 0
Total mult-adds (Units.GIGABYTES): 1.81
==========================================================================================
Input size (MB): 0.60
Forward/backward pass size (MB): 39.74
Params size (MB): 44.72
Estimated Total Size (MB): 85.06
==========================================================================================
Total GFlops: 1.814 GFLOPS
Total GFlops: 1.816049152 GFLOPS
Total GFlops: 1.826008576 GFLOPS
ResNet(
  (conv1): Conv2d(3, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)
  (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False)
        (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))
  (fc): Linear(in_features=512, out_features=7, bias=True)
)
---------------------------------------------
Epoch: 1/20
Train_Loss: 1.8469, Train_Accuracy: 0.2455, Train_Top5_Accuracy: 0.8879
Test_Loss: 1.8030, Test_Accuracy: 0.2514, Test_Top5_Accuracy: 0.8799
---------------------------------------------
Epoch: 2/20
Train_Loss: 1.7386, Train_Accuracy: 0.2860, Train_Top5_Accuracy: 0.9098
Test_Loss: 1.6474, Test_Accuracy: 0.3450, Test_Top5_Accuracy: 0.9205
---------------------------------------------
Epoch: 3/20
Train_Loss: 1.5254, Train_Accuracy: 0.4073, Train_Top5_Accuracy: 0.9455
Test_Loss: 1.4900, Test_Accuracy: 0.4240, Test_Top5_Accuracy: 0.9521
---------------------------------------------
Epoch: 4/20
Train_Loss: 1.3500, Train_Accuracy: 0.4820, Train_Top5_Accuracy: 0.9634
Test_Loss: 1.4071, Test_Accuracy: 0.4694, Test_Top5_Accuracy: 0.9579
---------------------------------------------
Epoch: 5/20
Train_Loss: 1.2342, Train_Accuracy: 0.5283, Train_Top5_Accuracy: 0.9736
Test_Loss: 1.3006, Test_Accuracy: 0.5053, Test_Top5_Accuracy: 0.9710
---------------------------------------------
Epoch: 6/20
Train_Loss: 1.1624, Train_Accuracy: 0.5551, Train_Top5_Accuracy: 0.9788
Test_Loss: 1.4757, Test_Accuracy: 0.4289, Test_Top5_Accuracy: 0.9601
---------------------------------------------
Epoch: 7/20
Train_Loss: 1.0946, Train_Accuracy: 0.5813, Train_Top5_Accuracy: 0.9825
Test_Loss: 1.1557, Test_Accuracy: 0.5575, Test_Top5_Accuracy: 0.9804
---------------------------------------------
Epoch: 8/20
Train_Loss: 1.0421, Train_Accuracy: 0.6034, Train_Top5_Accuracy: 0.9857
Test_Loss: 1.2032, Test_Accuracy: 0.5501, Test_Top5_Accuracy: 0.9740
---------------------------------------------
Epoch: 9/20
Train_Loss: 0.9870, Train_Accuracy: 0.6256, Train_Top5_Accuracy: 0.9883
Test_Loss: 1.1400, Test_Accuracy: 0.5690, Test_Top5_Accuracy: 0.9852
---------------------------------------------
Epoch: 10/20
Train_Loss: 0.9299, Train_Accuracy: 0.6480, Train_Top5_Accuracy: 0.9903
Test_Loss: 1.1079, Test_Accuracy: 0.5880, Test_Top5_Accuracy: 0.9833
---------------------------------------------
Epoch: 11/20
Train_Loss: 0.8795, Train_Accuracy: 0.6673, Train_Top5_Accuracy: 0.9921
Test_Loss: 1.0777, Test_Accuracy: 0.6025, Test_Top5_Accuracy: 0.9851
---------------------------------------------
Epoch: 12/20
Train_Loss: 0.8171, Train_Accuracy: 0.6905, Train_Top5_Accuracy: 0.9940
Test_Loss: 1.1723, Test_Accuracy: 0.5831, Test_Top5_Accuracy: 0.9842
---------------------------------------------
Epoch: 13/20
Train_Loss: 0.7555, Train_Accuracy: 0.7191, Train_Top5_Accuracy: 0.9953
Test_Loss: 1.2221, Test_Accuracy: 0.5764, Test_Top5_Accuracy: 0.9831
---------------------------------------------
Epoch: 14/20
Train_Loss: 0.6849, Train_Accuracy: 0.7442, Train_Top5_Accuracy: 0.9963
Test_Loss: 1.1949, Test_Accuracy: 0.5891, Test_Top5_Accuracy: 0.9804
---------------------------------------------
Epoch: 15/20
Train_Loss: 0.6146, Train_Accuracy: 0.7750, Train_Top5_Accuracy: 0.9975
Test_Loss: 1.1712, Test_Accuracy: 0.6083, Test_Top5_Accuracy: 0.9816
---------------------------------------------
Epoch: 16/20
Train_Loss: 0.5424, Train_Accuracy: 0.8014, Train_Top5_Accuracy: 0.9977
Test_Loss: 1.2523, Test_Accuracy: 0.6024, Test_Top5_Accuracy: 0.9812
---------------------------------------------
Epoch: 17/20
Train_Loss: 0.4708, Train_Accuracy: 0.8306, Train_Top5_Accuracy: 0.9989
Test_Loss: 1.4790, Test_Accuracy: 0.5734, Test_Top5_Accuracy: 0.9797
---------------------------------------------
Epoch: 18/20
Train_Loss: 0.4144, Train_Accuracy: 0.8509, Train_Top5_Accuracy: 0.9991
Test_Loss: 1.5584, Test_Accuracy: 0.5730, Test_Top5_Accuracy: 0.9758
---------------------------------------------
Epoch: 19/20
Train_Loss: 0.3538, Train_Accuracy: 0.8737, Train_Top5_Accuracy: 0.9991
Test_Loss: 1.5140, Test_Accuracy: 0.6003, Test_Top5_Accuracy: 0.9790
---------------------------------------------
Epoch: 20/20
Train_Loss: 0.3235, Train_Accuracy: 0.8851, Train_Top5_Accuracy: 0.9994
Test_Loss: 1.6353, Test_Accuracy: 0.5942, Test_Top5_Accuracy: 0.9804
Training Time: 1350.08 seconds
